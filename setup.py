from setuptools import setup, Extension
import pathlib

# there are two ways to run this setup file
# if there is a pyd file available (generated by create_win_bdist.py), then it will generate a wheel for windows
# else, a OS independant ext_module for a sdist will be used

repo_folder = pathlib.Path(__file__).absolute().parents[0]

pyd_file = None
try:
    pyd_file = (repo_folder / "src" / "py" / "c-build").glob("*.pyd").__next__()
except StopIteration:
    pass

with open("README.md", "r", encoding="utf-8") as fh:
    long_description = fh.read()

kw = {"name": "sparse-bit-arrays",
    "version": "0.0.3",
    "author": "John Giorshev",
    "description": "sparse bit arrays",
    "long_description": long_description,
    "long_description_content_type": "text/markdown",
    "url": "https://github.com/jagprog5/sba",
    "packages": ["sba"],
    "package_dir": {"sba": "src/py"},
    "classifiers": [
        "Programming Language :: Python :: 3",
        "License :: OSI Approved :: MIT License",
    ],
    "python_requires": ">=3.6"}

if pyd_file is None:
    kw['package_data'] = {"sba": [str(repo_folder / "src" / "c" / "sba.h")]}
    kw['ext_modules'] = [Extension(name = "sba.c-build.sba_lib",
                            sources = ["src/c/sba.c"],
                            include_dirs = ["src/c"])]
    kw['classifiers'].append("Operating System :: OS Independent")
else:
    kw['setup_requires'] = ['wheel']
    kw['package_data'] = {"sba": [str(pyd_file)]}
    kw['classifiers'].append("Operating System :: Microsoft :: Windows")

setup(**kw)
